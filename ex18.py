# vim: set fileencoding=utf_8 :
'''
Cows And Bulls   
Exercise 18 (and Solution)

Create a program that will play the “cows and bulls” game with the user. The game works like this:

Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly in the correct idx, they have a “cow”. For every digit the user guessed correctly in the wrong idx is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end.

Say the number generated by the computer is 1038. An example interaction could look like this:

  Welcome to the Cows and Bulls Game! 
  Enter a number: 
  >>> 1234
  2 cows, 0 bulls
  >>> 1256
  1 cow, 1 bull
  ...
Until the user guesses the number.
'''
'''
Some helpful links:
    https://stackoverflow.com/questions/489999/convert-list-of-ints-to-one-number

[10:17 AM] Joe Layne: i think we just need to settle on rules
[10:17 AM] Joe Layne: the challenge is in the lack of clarity :)
[10:18 AM] Joe Layne: i ended up making the following decision:
[10:18 AM] Joe Layne: if i guess 8885 and the code is 9998, it's one bull
[10:19 AM] Joe Layne: but if i guess 8555 adn the code is 4888, it's 3 bulls

## using new function - it replaced the 5's in the middle with bulls instead of finding cows
boneill:practice-python boneill$ python ex18.py
Welcome to the Cows and Bulls game!
['7', '5', '5', '7']
Please enter a four digit number:5555
This is num after we updated bull(s). --- ['7', '!', '!', '7']
0 cows, 2 bulls
Guesses: 1
This is our generated number after guess: ['7', '5', '5', '7']
Please enter a four digit number:
'''
import random

def check_guess(onum, answer):
    cows, bulls = 0, 0
    num_string = ''.join(map(str,onum))
    num = onum[:]
    if num_string == answer:
        print "Correct sequence"
    else:
        for idx, snum in enumerate(answer):
            if snum == num[idx]:
                cows += 1
                num[idx] = "*"
        for idx, snum in enumerate(answer):
            if snum in num:
                bulls += num.count(snum)
                num = [i.replace(snum, "!") for i in num]
        print "%d cows, %d bulls" % (cows, bulls)

## put generator into its own function
def gen_num():
    listnum = [random.choice([str(i) for i in range(0, 10)]) for r in range(4)]
    return listnum

if __name__ == "__main__":
    tguess = 0
    answer = ""
    print "Welcome to the Cows and Bulls game!"
    num = gen_num()
    num_string = ''.join(map(str,num))
    while answer != num_string:
        tguess += 1
        answer = raw_input("Please enter a four digit number:")
#        tguess = check_guess(num, answer, tguess)
        check_guess(num, answer)
        print "Guesses: %s" % tguess
